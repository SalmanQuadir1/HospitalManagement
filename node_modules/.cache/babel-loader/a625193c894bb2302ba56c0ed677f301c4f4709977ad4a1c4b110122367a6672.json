{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mac\\\\OneDrive\\\\Desktop\\\\stie\\\\src\\\\components\\\\pages\\\\OncologyDrugs.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { allDrugs } from '../utils/allDrugs.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OncologyDrugs = () => {\n  _s();\n  const [selectedLetter, setSelectedLetter] = useState('a');\n\n  // Group drugs by first letter\n  const groupedDrugs = allDrugs.reduce((acc, drug) => {\n    const firstLetter = drug.charAt(0).toUpperCase();\n    acc[firstLetter] = acc[firstLetter] || [];\n    acc[firstLetter].push(drug);\n    return acc;\n  }, {});\n\n  // Handle letter click\n  const handleLetterClick = letter => {\n    setSelectedLetter(letter);\n  };\n\n  // Filter drugs based on selected letter\n  const filteredDrugs = selectedLetter ? groupedDrugs[selectedLetter] : allDrugs;\n\n  // Function to split the array into chunks for two columns\n  const splitArrayIntoTwoColumns = arr => {\n    const middleIndex = Math.ceil(arr.length / 2);\n    const firstColumn = arr.slice(0, middleIndex);\n    const secondColumn = arr.slice(middleIndex);\n    return [firstColumn, secondColumn];\n  };\n\n  // Split the filtered drugs into two columns\n  const [leftColumn, rightColumn] = splitArrayIntoTwoColumns(filteredDrugs);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-title text-center my-4  p-4 bg-light rounded-lg\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-dark\",\n        children: \"Oncology Drugs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"letters d-flex justify-content-center my-3 flex-wrap\",\n      children: Array.from({\n        length: 26\n      }, (_, index) => {\n        const letter = String.fromCharCode(65 + index);\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleLetterClick(letter),\n          className: `btn btn-${selectedLetter === letter ? 'primary text-white' : 'light'} mx-1 my-1`,\n          style: {\n            minWidth: '40px'\n          },\n          children: letter\n        }, letter, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row bg-light p-4 rounded mb-4 gap-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col bg-white shadow py-3 rounded\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-striped\",\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: leftColumn.map((drug, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"wid\",\n                  children: drug\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 37\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col bg-white shadow py-3 rounded\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-striped\",\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: rightColumn.map((drug, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"wid\",\n                  children: drug\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 37\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(OncologyDrugs, \"f99Y7TvG3+FLjXyfUJuW5glZiLg=\");\n_c = OncologyDrugs;\nexport default OncologyDrugs;\nvar _c;\n$RefreshReg$(_c, \"OncologyDrugs\");","map":{"version":3,"names":["React","useState","allDrugs","jsxDEV","_jsxDEV","OncologyDrugs","_s","selectedLetter","setSelectedLetter","groupedDrugs","reduce","acc","drug","firstLetter","charAt","toUpperCase","push","handleLetterClick","letter","filteredDrugs","splitArrayIntoTwoColumns","arr","middleIndex","Math","ceil","length","firstColumn","slice","secondColumn","leftColumn","rightColumn","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Array","from","_","index","String","fromCharCode","onClick","style","minWidth","map","_c","$RefreshReg$"],"sources":["C:/Users/Mac/OneDrive/Desktop/stie/src/components/pages/OncologyDrugs.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { allDrugs } from '../utils/allDrugs.js';\r\n\r\nconst OncologyDrugs = () => {\r\n    const [selectedLetter, setSelectedLetter] = useState('a');\r\n\r\n    // Group drugs by first letter\r\n    const groupedDrugs = allDrugs.reduce((acc, drug) => {\r\n        const firstLetter = drug.charAt(0).toUpperCase();\r\n        acc[firstLetter] = acc[firstLetter] || [];\r\n        acc[firstLetter].push(drug);\r\n        return acc;\r\n    }, {});\r\n\r\n    // Handle letter click\r\n    const handleLetterClick = (letter) => {\r\n        setSelectedLetter(letter);\r\n    };\r\n\r\n    // Filter drugs based on selected letter\r\n    const filteredDrugs = selectedLetter ? groupedDrugs[selectedLetter] : allDrugs;\r\n\r\n    // Function to split the array into chunks for two columns\r\n    const splitArrayIntoTwoColumns = (arr) => {\r\n        const middleIndex = Math.ceil(arr.length / 2);\r\n        const firstColumn = arr.slice(0, middleIndex);\r\n        const secondColumn = arr.slice(middleIndex);\r\n        return [firstColumn, secondColumn];\r\n    };\r\n\r\n    // Split the filtered drugs into two columns\r\n    const [leftColumn, rightColumn] = splitArrayIntoTwoColumns(filteredDrugs);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"header-title text-center my-4  p-4 bg-light rounded-lg\">\r\n                <h2 className=\"text-dark\">Oncology Drugs</h2>\r\n            </div>\r\n            <div className=\"letters d-flex justify-content-center my-3 flex-wrap\">\r\n                {Array.from({ length: 26 }, (_, index) => {\r\n                    const letter = String.fromCharCode(65 + index);\r\n                    return (\r\n                        <button\r\n                            key={letter}\r\n                            onClick={() => handleLetterClick(letter)}\r\n                            className={`btn btn-${selectedLetter === letter ? 'primary text-white' : 'light'} mx-1 my-1`}\r\n                            style={{ minWidth: '40px' }}\r\n                        >\r\n                            {letter}\r\n                        </button>\r\n                    );\r\n                })}\r\n            </div>\r\n            <div className=\"row bg-light p-4 rounded mb-4 gap-3\">\r\n                <div className=\"col bg-white shadow py-3 rounded\">\r\n                    <table className=\"table table-striped\">\r\n                        <tbody>\r\n                            {leftColumn.map((drug, index) => (\r\n                                <tr key={index}>\r\n                                    <td>\r\n                                        <p className=\"wid\">{drug}</p>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <div className=\"col bg-white shadow py-3 rounded\">\r\n                    <table className=\"table table-striped\">\r\n                        <tbody>\r\n                            {rightColumn.map((drug, index) => (\r\n                                <tr key={index}>\r\n                                    <td>\r\n                                        <p className=\"wid\">{drug}</p>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default OncologyDrugs;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}